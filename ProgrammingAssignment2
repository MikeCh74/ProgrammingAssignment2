
-## functions working 
+## functions to calculate the inverse matrix with possibility to cache the result too

 
-## Comment -  
+## The function makeCacheMatrix makes "special" list of functions to set the value of matrix,
+## to get the matrix, to set the value of inverse matrix and to get the inverse matrix 
 
 makeCacheMatrix <- function(x = matrix()) {
-
+        m <- NULL
+        set <- function(y) {
+                x <<- y
+                m <<- NULL
+        }
+        get <- function() x
+        setsolve <- function(solve) m <<- solve
+        getsolve <- function() m
+        list(set = set, get = get,
+             setsolve = setsolve,
+             getsolve = getsolve)
+        
+        
 }
 
 
-## comment on cacheSolve 
+
+
+## The function cacheSolve returns the inverse matrix prepared with makeCacheMatrix(). 

 
 cacheSolve <- function(x, ...) {
         ## Return a matrix that is the inverse of 'x'
+        m <- x$getsolve()
        ## Checks whether inverse is calculated  
+        if(!is.null(m)) {
+                message("getting cached data")
+                return(m)
+        }
+        data <- x$get()
+        m <- solve(data, ...)
+        x$setsolve(m)
+        m
 }
